{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,UAEA,WASE,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEnDA,OAlBM,CACXS,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,OAAQH,SAASC,cAAc,wBAC/BG,UAAWJ,SAASC,cAAc,UAClCI,KAAML,SAASC,cAAc,WAiB1BI,KAAKC,iBAAiB,UAAU,SAAAC,GACnCA,EAAMC,iBAQN,IAPA,IAEgBC,EAAZF,EAAMG,OADRC,SAAYrB,EAAKmB,EAALnB,MAAOsB,EAAIH,EAAJG,KAAMT,EAAMM,EAANN,OAGvBU,EAAYC,SAASxB,EAAMyB,MAAO,IAChCC,EAAUF,SAASF,EAAKG,MAAO,IAE5BE,EAAQ,EAAGA,GAASd,EAAOY,MAAOE,IACzC7B,EAAc6B,EAAOJ,GAClBK,MAAK,SAAAC,G,OAAUC,EAAAlC,GAASmC,OAAOC,QAAQH,MACvCI,OAAM,SAAAC,G,OAASJ,EAAAlC,GAASmC,OAAOI,QAAQD,MAC1CX,GAAaG,KAKnBU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromises() {\n  const refs = {\n    firstDelay: document.querySelector('input[name=\"delay\"]'),\n    delayStep: document.querySelector('input[name=\"step\"]'),\n    amount: document.querySelector('input[name=\"amount\"]'),\n    createBtn: document.querySelector('button'),\n    form: document.querySelector('.form'),\n  };\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      }, delay);\n    });\n  }\n\n  refs.form.addEventListener('submit', event => {\n    event.preventDefault();\n    const {\n      elements: { delay, step, amount },\n    } = event.target;\n\n    let delayTime = parseInt(delay.value, 10);\n    const stepInt = parseInt(step.value, 10);\n\n    for (let index = 1; index <= amount.value; index++) {\n      createPromise(index, delayTime)\n        .then(result => Notiflix.Notify.success(result))\n        .catch(error => Notiflix.Notify.failure(error));\n      delayTime += stepInt;\n    }\n  });\n}\n\ncreatePromises();\n"],"names":["$iU1Pc","parcelRequire","createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","firstDelay","document","querySelector","delayStep","amount","createBtn","form","addEventListener","event","preventDefault","_elements","target","elements","step","delayTime","parseInt","value","stepInt","index","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","$ce04d3a99e08e73b$var$createPromises"],"version":3,"file":"03-promises.40fc13f8.js.map"}