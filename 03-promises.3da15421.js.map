{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,UAEA,WAGE,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEnDA,MAZMS,SAASC,cAAc,SAgB/BC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAQN,IAPA,IAEgBC,EAAZF,EAAMG,OADRC,SAAYhB,EAAKc,EAALd,MAAOiB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGvBC,EAAYC,SAASpB,EAAMqB,MAAO,IAChCC,EAAUF,SAASH,EAAKI,MAAO,IAE5BE,EAAQ,EAAGA,GAASL,EAAOG,MAAOE,IACzCzB,EAAcyB,EAAOJ,GAClBK,MAAK,SAAAC,G,OAAUC,EAAA9B,GAAS+B,OAAOC,QAAQH,MACvCI,OAAM,SAAAC,G,OAASJ,EAAA9B,GAAS+B,OAAOI,QAAQD,MAC1CX,GAAaG,KAKnBU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromises() {\n  const form = document.querySelector('.form');\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      }, delay);\n    });\n  }\n\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n    const {\n      elements: { delay, step, amount },\n    } = event.target;\n\n    let delayTime = parseInt(delay.value, 10);\n    const stepInt = parseInt(step.value, 10);\n\n    for (let index = 1; index <= amount.value; index++) {\n      createPromise(index, delayTime)\n        .then(result => Notiflix.Notify.success(result))\n        .catch(error => Notiflix.Notify.failure(error));\n      delayTime += stepInt;\n    }\n  });\n}\n\ncreatePromises();\n"],"names":["$iU1Pc","parcelRequire","createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","step","amount","delayTime","parseInt","value","stepInt","index","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","$ce04d3a99e08e73b$var$createPromises"],"version":3,"file":"03-promises.3da15421.js.map"}